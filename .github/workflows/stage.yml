---
name: Stage

on:
  workflow_dispatch:
  push:
    branches:
      - dev
    paths:
      - src/**
      - tests/**
      - pyproject.toml
      - requirements.txt

env:
  MAIN_PY_VER: "3.13"

jobs:
  test:
    runs-on: ubuntu-latest
    environment: staging
    name: Stage project
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup timezone
        uses: zcong1993/setup-timezone@v2.0.0
        with:
          timezone: Asia/Jerusalem

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PY_VER }}

      - name: Cache pip repository
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ env.MAIN_PY_VER }}

      - name: Prepare python environment
        run: |
          pip install -r requirements.txt
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Cache poetry virtual environment
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}-${{ env.MAIN_PY_VER }}

      - name: Install, test with coverage report, and build
        run: |
          poetry lock --no-update
          poetry install --no-interaction
          poetry run poe test_rep
          poetry build

      - name: Push to CodeCov
        uses: codecov/codecov-action@v5
        if: ${{ matrix.python == env.MAIN_PY_VER }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
